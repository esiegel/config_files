ZSH=$HOME/.oh-my-zsh
ZSH_THEME="robbyrussell"

DISABLE_AUTO_UPDATE="true"

# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
plugins=(git git-flow osx pip virtualenvwrapper zsh-syntax-highlighting)

# oh-my-zsh entry
source $ZSH/oh-my-zsh.sh

########## CUSTOMIZATION

export PATH=/usr/local/bin:/usr/local/sbin:/usr/bin:/bin:/usr/sbin:/sbin

# Increase cmd history size
export HISTSIZE=5000

# don't ask if "this is correct"
unsetopt correct_all
unsetopt correct

# set editor variables
export EDITOR=$(which vim)
export PAGER=less

# Less needs to pass through escaped color characters.
export LESS=-R

CODE=$HOME/code

if [[ -d $HOME/Dropbox ]]; then
   DROPBOX=$HOME/Dropbox
elif [[ -d "$HOME/Dropbox (Personal)" ]]; then
   DROPBOX="$HOME/Dropbox (Personal)"
fi

# load custom source
if [[ -f $HOME/.zshrc-custom ]]; then
   source $HOME/.zshrc-custom
fi

############## NODE

# Add Node modules to path
export PATH=$PATH:/usr/local/share/npm/bin

############## Haskell

# add haskell cabal binaries to path
export PATH=$PATH:$HOME/.cabal/bin

# cabal uninstall
cabal-uninstall() {
   if [[ $# -ne 1 ]]; then
       echo cabal-uninstall: need to speicify package to uninstall
       return 1
   fi
   package=$1
   ghc-pkg unregister $package >/dev/null 2>&1
   find ~/.cabal -type d -name "*$package*" | xargs rm -rf
   find ~/.cabal -type f -name "*$package*" | xargs rm
}

################## GOLANG

export GOPATH=$CODE/go
export PATH=$PATH:$GOPATH/bin

################## Node

export PATH=$PATH:$CODE/tern/bin

################## Other

# Sourcetree to path
alias stree=/Applications/SourceTree.app/Contents/Resources/stree

alias emacsapp="open /usr/local/Cellar/emacs/24.4-dev/Emacs.app"

# ack 2.0 doesn't support searching all files, this does.
alias acka="ack --type-set='all:match:.*' -k"

# Virtualbox vm control
alias start_kernvm="VBoxManage startvm --type headless kernel_dev"
alias stop_kernvm="VBoxManage controlvm kernel_dev poweroff"
alias ssh_kernvm="ssh -p 2222 eric@127.0.0.1"

# shortcuts
# note: dropbox can contain spaces so we must wrap it in quotes
alias ideas="$EDITOR \"$DROPBOX/ideas.md\""
alias notes="$EDITOR \"$DROPBOX/notes.md\""
alias questions="$EDITOR \"$DROPBOX/questions.md\""
alias scratch="$EDITOR \"$DROPBOX/scratch.md\""
alias todo="$EDITOR \"$DROPBOX/todo.md\""

# android sdk
export ANDROID_HOME=/usr/local/opt/android-sdk

# GPG default key
export GPGKEY=ED6BE39D

# swift repl
alias swift="xcrun --sdk iphonesimulator8.0 swift"

# add local scripts
export PATH=$PATH:$CODE/scripts

# fasd init
eval "$(fasd --init auto)"
alias v='f -e vim' # quick opening files with vim
alias o='a -e open' # quick opening files with open

# ruby env home
export RBENV_ROOT=/usr/local/var/rbenv
alias bundleinstall="bundle install --path .gems"

# To enable shims and autocompletion add to your profile:
if which rbenv > /dev/null; then eval "$(rbenv init -)"; fi

# arcanist code review
export PATH=$PATH:$CODE/arcanist/bin
source $CODE/arcanist/resources/shell/bash-completion

# include scripts
export PATH=$PATH:$CODE/scripts

exit_if_failure() {
  exit_code=$?
  msg=${1:-BAD_EXIT_CODE}

  if [[ $exit_code != 0 ]]; then
    echo $msg
    exit $exit_code
  fi
}

# destroys and recreates web test_db
recreate_testdb() {
  dropdb transcriptic_test
  if [[ $? == 0 ]]; then
    createdb transcriptic_test
  fi
  if [[ $? == 0 ]]; then
    cat ~/code/web/db/structure.sql | psql transcriptic_test > /dev/null
  fi
  if [[ $? == 0 ]]; then
    echo "Test DB recreated"
  else
    echo "Test DB FAIL"
  fi
}

find_tests() {
  searchterm=$1
  alltests=$(ag --ruby "^.*test.* \"(.*)\".*do" test | egrep $searchterm)
  for test in $alltests; do
    echo $test
  done
}

run_tests() {
  searchterm=$1
  tests=("${(@f)$(find_tests $searchterm)}")

  for t in $tests; do
    local file=$(echo $t | cut -d' ' -f1 | cut -d ':' -f1)
    local testname=$(echo $t | cut -d'"' -f2 | sed 's/ /_/g')
    local cmd="bundle exec ruby -I test $file -n test_$testname"

    echo "TEST: $file $testname\n"
    eval $cmd
  done
}

# find recent files committed
recent_changes() {
  local start_revision=${1:-HEAD^}
  local end_revision="HEAD" 
  git diff-tree --name-only -r "${start_revision}..${end_revision}"
}
alias modified_files="git ls-files -m -o -X .gitignore -X ~/.gitignore"
